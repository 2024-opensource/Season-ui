{"version":3,"file":"components-musicBar-MusicBar-stories.d6863dd4.iframe.bundle.js","mappings":";;AAWA;AACA;;;AAGA;;;;AAIA;;;;AAMA;AACA;AACA;AAGA;AACA;;;;;;;;;;AAUA;AAGA;;AAEA;AAGA;;AAEA;;AAIA;;;AAGA;AACA","sources":["webpack://season-ui/./src/components/musicBar/MusicBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { ReactComponent as BackBtn } from '../../icons/backBtn.svg';\r\nimport { ReactComponent as PlayBtn } from '../../icons/playBtn.svg';\r\nimport { ReactComponent as NextBtn } from '../../icons/nextBtn.svg';\r\nimport { ReactComponent as StopBtn } from '../../icons/stopBtn.svg';\r\nimport { ReactComponent as Santa } from '../../icons/santa.svg';\r\n\r\nconst MusicBoxStyle = styled.div`\r\n  box-sizing: border-box;\r\n  width: ${({ width }) => width}px;\r\n  height: ${({ width }) => width * 0.45}px;\r\n  border: 3px solid #b03b26;\r\n  border-radius: 10px;\r\n  padding: ${({ width }) => width * 0.04}px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst MusicBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: ${({ width }) => width * 0.02}px;\r\n  margin-right: ${({ width }) => width * 0.06}px;\r\n`;\r\n\r\nconst AlbumCover = styled.div`\r\n  width: ${({ width }) => width * 0.375}px;\r\n  height: ${({ width }) => width * 0.375 * 2.2}px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n\r\n  img,\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nconst MusicTitle = styled.div`\r\n  font-size: ${({ width }) => width * 0.05}px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Singer = styled.div`\r\n  font-size: ${({ width }) => width * 0.035}px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst PlayWrapper = styled.div`\r\n  display: flex;\r\n  gap: ${({ width }) => width * 0.02}px;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin-top: ${({ width }) => width * 0.05}px;\r\n`;\r\n\r\nconst MusicBar = ({ albumCover, title, singer, width }) => {\r\n  const [isClick, setIsClick] = useState(false);\r\n\r\n  const handlePlayPauseClick = () => {\r\n    setIsClick(prevState => !prevState);\r\n  };\r\n\r\n  return (\r\n    <MusicBoxStyle width={width}>\r\n      <AlbumCover width={width}>\r\n        {typeof albumCover === 'string' ? (\r\n          <img src={albumCover} alt='앨범 커버' />\r\n        ) : (\r\n          <Santa />\r\n        )}\r\n      </AlbumCover>\r\n      <MusicBox width={width}>\r\n        <MusicTitle width={width}>{title}</MusicTitle>\r\n        <Singer width={width}>{singer}</Singer>\r\n        <PlayWrapper width={width}>\r\n          <BackBtn />\r\n          <button\r\n            onClick={handlePlayPauseClick}\r\n            style={{ background: 'none', border: 'none', cursor: 'pointer' }}\r\n          >\r\n            {isClick ? <StopBtn /> : <PlayBtn />}\r\n          </button>\r\n          <NextBtn />\r\n        </PlayWrapper>\r\n      </MusicBox>\r\n    </MusicBoxStyle>\r\n  );\r\n};\r\n\r\nMusicBar.propTypes = {\r\n  albumCover: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  title: PropTypes.string.isRequired,\r\n  singer: PropTypes.string.isRequired,\r\n  width: PropTypes.number,\r\n};\r\n\r\nMusicBar.defaultProps = {\r\n  albumCover: <Santa />,\r\n  title: 'Default Title',\r\n  singer: 'Default Singer',\r\n  width: 400,\r\n};\r\n\r\nexport default MusicBar;\r\n"],"names":[],"sourceRoot":""}