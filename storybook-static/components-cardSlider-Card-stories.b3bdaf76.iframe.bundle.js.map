{"version":3,"file":"components-cardSlider-Card-stories.b3bdaf76.iframe.bundle.js","mappings":";;;AASA;;;;;;;;;;AAYA;;;;AAMA;ACrBA;AACA;;;;;;AAMA;;;AAGA;;AAIA;;;AAGA;AACA;AAGA;AACA;AACA;AACA;AAGA;;AAEA;;;AAKA;AACA;AAGA;;;;;;;AAOA;AACA;;;;;AAKA","sources":["webpack://season-ui/./src/components/cardSlider/Rating.jsx","webpack://season-ui/./src/components/cardSlider/Card.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { ReactComponent as GingerIconFilled } from '../../icons/ginger.svg';\r\nimport { ReactComponent as GingerIconEmpty } from '../../icons/ginger_blank.svg';\r\n\r\nconst RatingContainer = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n`;\r\n\r\nconst StarIcon = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n  transform-origin: center;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst FilledGinger = styled(GingerIconFilled)`\r\n  position: relative;\r\n  left: -4px;\r\n  top: -3px;\r\n`;\r\nconst Rating = ({ totalStars = 5 }) => {\r\n  const [rating, setRating] = useState(0);\r\n  const ratingRef = useRef(null);\r\n\r\n  const handleClick = index => {\r\n    setRating(index + 1);\r\n  };\r\n\r\n  const handleOutsideClick = event => {\r\n    if (ratingRef.current && !ratingRef.current.contains(event.target)) {\r\n      setRating(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleOutsideClick);\r\n    return () => {\r\n      document.removeEventListener('click', handleOutsideClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <RatingContainer ref={ratingRef}>\r\n      {[...Array(totalStars)].map((_, index) => (\r\n        <StarIcon\r\n          key={index}\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            handleClick(index);\r\n          }}\r\n        >\r\n          {index < rating ? <FilledGinger /> : <GingerIconEmpty />}\r\n        </StarIcon>\r\n      ))}\r\n    </RatingContainer>\r\n  );\r\n};\r\n\r\nRating.propTypes = {\r\n  totalStars: PropTypes.number,\r\n};\r\n\r\nRating.defaultProps = {\r\n  totalStars: 5,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\nimport Rating from './Rating';\r\n\r\nconst CardStyle = styled.div`\r\n  width: ${({ width }) => width}px;\r\n  height: ${({ height }) => height}px;\r\n  background-color: #b03b26;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: ${({ width }) => width * 0.1}px;\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nconst ImagePlaceholder = styled.div`\r\n  width: 90%;\r\n  height: ${({ height }) => height * 0.5}px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  margin-bottom: ${({ height }) => height * 0.05}px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: ${({ width }) => width * 0.09}px;\r\n  margin: ${({ height }) => height * 0.02}px 0\r\n    ${({ height }) => height * 0.01}px 0;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: ${({ width }) => width * 0.06}px;\r\n  margin: 0;\r\n`;\r\n\r\nconst IconRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: ${({ height }) => height * 0.03}px 0;\r\n`;\r\n\r\nconst HireButton = styled.button`\r\n  padding: ${({ height }) => height * 0.05}px ${({ width }) => width * 0.1}px;\r\n  background-color: #f3dfcd;\r\n  color: #b03b26;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  margin-top: ${({ height }) => height * 0.05}px;\r\n  font-size: ${({ width }) => width * 0.06}px;\r\n\r\n  &:hover {\r\n    background-color: #e3cbbf;\r\n  }\r\n`;\r\n\r\nconst Card = ({ title, description, buttonText, width, height }) => {\r\n  return (\r\n    <CardStyle width={width} height={height}>\r\n      <ImagePlaceholder width={width} height={height} />\r\n      <Title width={width} height={height}>\r\n        {title}\r\n      </Title>\r\n      <Description width={width}>{description}</Description>\r\n      <IconRow height={height}>\r\n        <Rating totalStars={5} />\r\n      </IconRow>\r\n      <HireButton width={width} height={height}>\r\n        {buttonText}\r\n      </HireButton>\r\n    </CardStyle>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  buttonText: PropTypes.string.isRequired,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n\r\nCard.defaultProps = {\r\n  title: '루돌프 이름',\r\n  description: '저 밥 조금만 먹어요',\r\n  buttonText: 'Hire Me',\r\n  width: 200,\r\n  height: 300,\r\n};\r\n"],"names":[],"sourceRoot":""}